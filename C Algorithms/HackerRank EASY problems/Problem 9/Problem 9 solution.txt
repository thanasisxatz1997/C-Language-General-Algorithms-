/*
 * Complete the 'gradingStudents' function below.
 *
 * The function is expected to return an INTEGER_ARRAY.
 * The function accepts INTEGER_ARRAY grades as parameter.
 */

/*
 * To return the integer array from the function, you should:
 *     - Store the size of the array to be returned in the result_count variable
 *     - Allocate the array statically or dynamically
 *
 * For example,
 * int* return_integer_array_using_static_allocation(int* result_count) {
 *     *result_count = 5;
 *
 *     static int a[5] = {1, 2, 3, 4, 5};
 *
 *     return a;
 * }
 *
 * int* return_integer_array_using_dynamic_allocation(int* result_count) {
 *     *result_count = 5;
 *
 *     int *a = malloc(5 * sizeof(int));
 *
 *     for (int i = 0; i < 5; i++) {
 *         *(a + i) = i + 1;
 *     }
 *
 *     return a;
 * }
 *
 */
int* gradingStudents(int grades_count, int* grades, int *result_count) {
    *result_count = grades_count;
    int i;
    int *R_grades = malloc(*result_count * sizeof(int));
    for(i=0;i<grades_count;i++){
        if(*(grades +i)>=38){
            if(5-*(grades+i)%5<3){
                *(R_grades+i)=(*(grades+i))+1;
                if(*(R_grades+i)%5!=0){
                    *(R_grades+i)=*(R_grades+i)+1;
                }
            }
            else{
                *(R_grades+i)=*(grades+i);
            }
        }
        else{
            *(R_grades+i)=*(grades+i);
        }
    }    
    return R_grades;
}